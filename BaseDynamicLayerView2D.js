import{j as o,al as p,am as a,an as r,ao as m}from"./index.js";import{a as n}from"./BitmapContainer.js";import{f as h,u as d}from"./LayerView.js";import{v as c}from"./ExportStrategy.js";import{i as u}from"./RefreshableLayerView.js";import"./WGLContainer.js";import"./VertexArrayObject.js";import"./Texture.js";import"./color.js";import"./ProgramTemplate.js";import"./MaterialKey.js";import"./utils.js";import"./config.js";import"./GeometryUtils.js";import"./Container.js";import"./earcut.js";import"./Bitmap.js";let t=class extends u(h(d)){update(i){this._strategy.update(i).catch(e=>{o(e)||p.getLogger(this.declaredClass).error(e)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new n,this.container.addChild(this._bitmapContainer),this._strategy=new c({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(i,e,s){return this.layer.fetchImageBitmap(i,e,s)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};a([r()],t.prototype,"_strategy",void 0),a([r()],t.prototype,"updating",void 0),t=a([m("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const R=t;export{R as default};
