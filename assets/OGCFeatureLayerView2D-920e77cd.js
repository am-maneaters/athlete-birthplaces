import{am as r,an as a,ao as o}from"./index-5be327fa.js";import s from"./FeatureLayerView2D-175a7c82.js";import"./Container-abf16040.js";import"./Texture-0acc3c7f.js";import"./LayerView-87c40c57.js";import"./schemaUtils-19a5f5ac.js";import"./color-07427e33.js";import"./utils-86ca6992.js";import"./MaterialKey-f3e0d2fe.js";import"./visualVariablesUtils-09f66a0f.js";import"./ExpandedCIM-99ff4391.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-95d000c1.js";import"./floatRGBA-b5760baa.js";import"./util-3f742baf.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-fb92d4f7.js";import"./RefreshableLayerView-a2afedda.js";const m=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends m(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
