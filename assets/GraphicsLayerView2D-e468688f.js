import{a4 as a,at as p,ae as o,r as g,am as s,an as m,ao as l}from"./index-fc217036.js";import{f as c,u as n}from"./LayerView-18928023.js";import{i as d}from"./GraphicContainer-6192f84f.js";import{a as u}from"./GraphicsView2D-8909d743.js";import"./Container-0a5856ba.js";import"./Texture-ed549a22.js";import"./color-3dc775af.js";import"./BaseGraphicContainer-d1b4bad6.js";import"./FeatureContainer-82573e9c.js";import"./AttributeStoreView-64d6c0bb.js";import"./TiledDisplayObject-cce2f330.js";import"./visualVariablesUtils-0ff7c26e.js";import"./visualVariablesUtils-32f3c816.js";import"./VertexArrayObject-33e28580.js";import"./TileContainer-3311ba48.js";import"./WGLContainer-38e27347.js";import"./ProgramTemplate-da079708.js";import"./MaterialKey-aaa20868.js";import"./utils-9e2add98.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./vec3f32-ad1dc57f.js";import"./ExpandedCIM-cda39ed7.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-0ef79db0.js";import"./floatRGBA-e63ff39f.js";import"./normalizeUtilsSync-39e5d849.js";import"./projectionSupport-87ba1890.js";import"./json-48e3ea08.js";import"./Matcher-40a2b97d.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-1d162d93.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-c62bc5d8.js";import"./util-b42276b2.js";import"./ComputedAttributeStorage-c32f454f.js";import"./arcadeTimeUtils-f7f66cb8.js";import"./executionError-fb3f283a.js";import"./centroid-5d3c504b.js";const w={remove(){},pause(){},resume(){}};let r=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=a(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof p?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):o.isCollection(i)&&i.length>0&&(t=i.map(e=>e&&e.uid).toArray());const h=t==null?void 0:t.filter(g);return h!=null&&h.length?(this._addHighlight(h),{remove:()=>this._removeHighlight(h)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t);this._highlightIds.set(t,h+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t)-1;h===0?this._highlightIds.delete(t):this._highlightIds.set(t,h)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],r.prototype,"graphicsView",void 0),r=s([l("esri.views.2d.layers.GraphicsLayerView2D")],r);const ri=r;export{ri as default};
//# sourceMappingURL=GraphicsLayerView2D-e468688f.js.map
