import{am as r,an as a,ao as o}from"./index-8fbc1f4a.js";import s from"./FeatureLayerView2D-7f985393.js";import"./Container-f524c24f.js";import"./Texture-48a7e7ed.js";import"./LayerView-9425716a.js";import"./schemaUtils-620c4095.js";import"./color-0cdbba8e.js";import"./utils-12e92814.js";import"./MaterialKey-0425a2bf.js";import"./visualVariablesUtils-ab12c831.js";import"./ExpandedCIM-8dc9997f.js";import"./BidiEngine-836b7ef6.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-b1acddf1.js";import"./floatRGBA-d89ff3f4.js";import"./util-fbf35b84.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-4e2ec011.js";import"./RefreshableLayerView-1ecd7b2c.js";const m=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(p=>p.name)}};return r([a()],e.prototype,"layer",void 0),r([a({readOnly:!0})],e.prototype,"availableFields",null),e=r([o("esri.views.layers.OGCFeatureLayerView")],e),e};let i=class extends m(s){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};i=r([o("esri.views.2d.layers.OGCFeatureLayerView2D")],i);const R=i;export{R as default};
