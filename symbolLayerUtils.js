import{hd as h,s as i,r as c,U as d,kg as b,kh as w,e4 as v,a2 as z,gq as g,ki as j}from"./index.js";let s=y();function y(){return new h(50)}function x(){s=y()}function I(e,r){if(e.type==="icon")return l(e,r);if(e.type==="object")return f(e,r);throw new i("symbol3d:unsupported-symbol-layer","computeLayerSize only works with symbol layers of type Icon and Object")}async function P(e,r){if(e.type==="icon")return L(e,r);if(e.type==="object")return B(e,r);throw new i("symbol3d:unsupported-symbol-layer","computeLayerSize only works with symbol layers of type Icon and Object")}async function l(e,r){var t,n;if((t=e.resource)!=null&&t.href)return _(e.resource.href).then(o=>[o.width,o.height]);if((n=e.resource)!=null&&n.primitive)return c(r)?[r,r]:[256,256];throw new i("symbol3d:invalid-symbol-layer","symbol layers of type Icon must have either an href or a primitive resource")}function L(e,r){return l(e,r).then(t=>{if(e.size==null)return t;const n=t[0]/t[1];return n>1?[e.size,e.size/n]:[e.size*n,e.size]})}function _(e){return d(e,{responseType:"image"}).then(r=>r.data)}function f(e,r){return S(e,r).then(t=>b(t))}async function B(e,r){const t=await f(e,r);return w(t,e)}async function S(e,r){var n;if(!e.isPrimitive){const o=v((n=e.resource)==null?void 0:n.href),u=s.get(o);if(u!==void 0)return u;const m=await z(()=>import("./objectResourceUtils.js").then(p=>p.o),["objectResourceUtils.js","devEnvironmentUtils.js","index.js","assets/index-cac073d9.css","mat3f64.js","mat4f64.js","BufferView.js","vec33.js","DefaultMaterial_COLOR_GAMMA.js","types.js","Version.js","quat.js","quatf64.js","resourceUtils2.js","basicInterfaces.js","Indices.js","NestedMap.js","requestImageUtils.js","Util2.js","sphere.js","VertexAttribute.js","OrderIndependentTransparency.js","Texture.js","VertexArrayObject.js","InterleavedLayout.js","vec3f32.js","doublePrecisionUtils.js","symbolColorUtils.js"]),a=await m.fetch(o,{disableTextures:!0});return s.put(o,a.referenceBoundingBox),a.referenceBoundingBox}let t=null;if(e.resource&&e.resource.primitive&&(t=g(j(e.resource.primitive)),c(r)))for(let o=0;o<t.length;o++)t[o]*=r;return t?Promise.resolve(t):Promise.reject(new i("symbol:invalid-resource","The symbol does not have a valid resource"))}export{x as clearBoundingBoxCache,l as computeIconLayerResourceSize,I as computeLayerResourceSize,P as computeLayerSize,f as computeObjectLayerResourceSize};
