import{am as a,an as o,aC as l,ao as m,af as g,j as d,al as u,a6 as c}from"./index.js";import{a as y}from"./BitmapContainer.js";import{f,u as x}from"./LayerView.js";import{a as w}from"./GraphicsView2D.js";import{n as v}from"./HighlightGraphicContainer.js";import{v as _}from"./ExportStrategy.js";import{c as H}from"./ExportImageParameters.js";import{i as I}from"./RefreshableLayerView.js";import{S as V,a as C}from"./drapedUtils.js";import"./WGLContainer.js";import"./VertexArrayObject.js";import"./Texture.js";import"./color.js";import"./ProgramTemplate.js";import"./MaterialKey.js";import"./utils.js";import"./config.js";import"./GeometryUtils.js";import"./Container.js";import"./earcut.js";import"./ExpandedCIM.js";import"./BidiEngine.js";import"./Rect.js";import"./quantizationUtils.js";import"./floatRGBA.js";import"./normalizeUtilsSync.js";import"./projectionSupport.js";import"./json.js";import"./AttributeStoreView.js";import"./TiledDisplayObject.js";import"./visualVariablesUtils.js";import"./visualVariablesUtils2.js";import"./Matcher.js";import"./tileUtils.js";import"./TurboLine.js";import"./devEnvironmentUtils.js";import"./schemaUtils.js";import"./util.js";import"./ComputedAttributeStorage.js";import"./arcadeTimeUtils.js";import"./executionError.js";import"./centroid.js";import"./BaseGraphicContainer.js";import"./FeatureContainer.js";import"./TileContainer.js";import"./vec3f32.js";import"./Bitmap.js";import"./floorFilterUtils.js";import"./sublayerUtils.js";import"./scaleUtils.js";import"./popupUtils.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return a([o()],e.prototype,"exportImageParameters",void 0),a([o({readOnly:!0})],e.prototype,"floors",null),a([o({readOnly:!0})],e.prototype,"exportImageVersion",null),a([o()],e.prototype,"layer",void 0),a([o()],e.prototype,"suspended",void 0),a([o(l)],e.prototype,"timeExtent",void 0),e=a([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends P(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(r=>{d(r)||u.getLogger(this.declaredClass).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:r}=this.layer,i=r>=10.3,n=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>C(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:i,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,i){return this.layer.fetchImage(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}fetchImageBitmap(t,e,r,i){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}highlight(t){return this._popupHighlightHelper.highlight(t)}};a([o()],s.prototype,"strategy",void 0),a([o()],s.prototype,"updating",void 0),s=a([m("esri.views.2d.layers.MapImageLayerView2D")],s);const Ct=s;export{Ct as default};
